{"ast":null,"code":"var _jsxFileName = \"/Users/luis/Documents/Aleph-Hackathon-ZKQuizzer/src/pages/Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const questions = [{\n    question: \"What does ZK stand for?\",\n    options: [\"Zero Knowledge\", \"Zero Key\", \"Zebra King\"],\n    answer: \"Zero Knowledge\"\n  }, {\n    question: \"What is a key benefit of Zero Knowledge proofs?\",\n    options: [\"Privacy\", \"Speed\", \"Scalability\"],\n    answer: \"Privacy\"\n  }, {\n    question: \"Which cryptographic technique is often used in Zero Knowledge proofs?\",\n    options: [\"Elliptic Curve Cryptography\", \"Hashing\", \"RSA Encryption\"],\n    answer: \"Elliptic Curve Cryptography\"\n  }, {\n    question: \"Which of the following is a popular Zero Knowledge proof system?\",\n    options: [\"SNARKs\", \"SHA-256\", \"Merkle Trees\"],\n    answer: \"SNARKs\"\n  }, {\n    question: \"What does 'non-interactive' mean in the context of Zero Knowledge proofs?\",\n    options: [\"Proof doesn't require back-and-forth communication\", \"Proof is not cryptographically secure\", \"Proof is faster to verify\"],\n    answer: \"Proof doesn't require back-and-forth communication\"\n  }];\n  const handleAnswer = selectedOption => {\n    if (selectedOption === questions[questionIndex].answer) {\n      setScore(score + 1);\n    }\n    setQuestionIndex(questionIndex + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: questionIndex < questions.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questions[questionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), questions[questionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"DOeU9K/+Jji2Pwga7cIGBjNsciU=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","_s","questionIndex","setQuestionIndex","score","setScore","questions","question","options","answer","handleAnswer","selectedOption","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","_c","$RefreshReg$"],"sources":["/Users/luis/Documents/Aleph-Hackathon-ZKQuizzer/src/pages/Quiz.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Quiz: React.FC = () => {\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n\n  const questions = [\n    {\n      question: \"What does ZK stand for?\",\n      options: [\"Zero Knowledge\", \"Zero Key\", \"Zebra King\"],\n      answer: \"Zero Knowledge\"\n    },\n    {\n      question: \"What is a key benefit of Zero Knowledge proofs?\",\n      options: [\"Privacy\", \"Speed\", \"Scalability\"],\n      answer: \"Privacy\"\n    },\n    {\n      question: \"Which cryptographic technique is often used in Zero Knowledge proofs?\",\n      options: [\"Elliptic Curve Cryptography\", \"Hashing\", \"RSA Encryption\"],\n      answer: \"Elliptic Curve Cryptography\"\n    },\n    {\n      question: \"Which of the following is a popular Zero Knowledge proof system?\",\n      options: [\"SNARKs\", \"SHA-256\", \"Merkle Trees\"],\n      answer: \"SNARKs\"\n    },\n    {\n      question: \"What does 'non-interactive' mean in the context of Zero Knowledge proofs?\",\n      options: [\"Proof doesn't require back-and-forth communication\", \"Proof is not cryptographically secure\", \"Proof is faster to verify\"],\n      answer: \"Proof doesn't require back-and-forth communication\"\n    }\n  ];\n  \n\n  const handleAnswer = (selectedOption: string) => {\n    if (selectedOption === questions[questionIndex].answer) {\n      setScore(score + 1);\n    }\n    setQuestionIndex(questionIndex + 1);\n  };\n\n  return (\n    <div className=\"quiz\">\n      {questionIndex < questions.length ? (\n        <div>\n          <h2>{questions[questionIndex].question}</h2>\n          {questions[questionIndex].options.map((option, index) => (\n            <button key={index} onClick={() => handleAnswer(option)}>\n              {option}\n            </button>\n          ))}\n        </div>\n      ) : (\n        <div>\n          <h2>Quiz Completed!</h2>\n          <p>Your Score: {score}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMS,SAAS,GAAG,CAChB;IACEC,QAAQ,EAAE,yBAAyB;IACnCC,OAAO,EAAE,CAAC,gBAAgB,EAAE,UAAU,EAAE,YAAY,CAAC;IACrDC,MAAM,EAAE;EACV,CAAC,EACD;IACEF,QAAQ,EAAE,iDAAiD;IAC3DC,OAAO,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,aAAa,CAAC;IAC5CC,MAAM,EAAE;EACV,CAAC,EACD;IACEF,QAAQ,EAAE,uEAAuE;IACjFC,OAAO,EAAE,CAAC,6BAA6B,EAAE,SAAS,EAAE,gBAAgB,CAAC;IACrEC,MAAM,EAAE;EACV,CAAC,EACD;IACEF,QAAQ,EAAE,kEAAkE;IAC5EC,OAAO,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,cAAc,CAAC;IAC9CC,MAAM,EAAE;EACV,CAAC,EACD;IACEF,QAAQ,EAAE,2EAA2E;IACrFC,OAAO,EAAE,CAAC,oDAAoD,EAAE,uCAAuC,EAAE,2BAA2B,CAAC;IACrIC,MAAM,EAAE;EACV,CAAC,CACF;EAGD,MAAMC,YAAY,GAAIC,cAAsB,IAAK;IAC/C,IAAIA,cAAc,KAAKL,SAAS,CAACJ,aAAa,CAAC,CAACO,MAAM,EAAE;MACtDJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;IACAD,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,oBACEH,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBX,aAAa,GAAGI,SAAS,CAACQ,MAAM,gBAC/Bf,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAKP,SAAS,CAACJ,aAAa,CAAC,CAACK;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC3CZ,SAAS,CAACJ,aAAa,CAAC,CAACM,OAAO,CAACW,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAClDtB,OAAA;QAAoBuB,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAACU,MAAM,CAAE;QAAAP,QAAA,EACrDO;MAAM,GADIC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENnB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAI;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBnB,OAAA;QAAAc,QAAA,GAAG,cAAY,EAACT,KAAK;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CA3DID,IAAc;AAAAuB,EAAA,GAAdvB,IAAc;AA6DpB,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}